import{_ as s,c as t,a7 as a,o as n}from"./chunks/framework.BMVocD-_.js";const h=JSON.parse('{"title":"BasicTypes.jl","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),i={name:"index.md"};function l(o,e,r,p,d,c){return n(),t("div",null,e[0]||(e[0]=[a('<h1 id="BasicTypes.jl" tabindex="-1">BasicTypes.jl <a class="header-anchor" href="#BasicTypes.jl" aria-label="Permalink to &quot;BasicTypes.jl {#BasicTypes.jl}&quot;">â€‹</a></h1><p>BasicTypes provides boilerplate types and helper methods useful especially useful for simulations.</p><ul><li><p><strong><a href="./units">Units</a></strong>: Dimensions, Quantities and helper methods based on Unitful.jl.</p></li><li><p><strong>Valuetype</strong>: Helpers for determining the type of values in containers.</p></li><li><p><strong>Optionals</strong>: Types for optional values and helper methods for fallbacks.</p></li><li><p><strong>Physical Constants</strong>: Several physical constants</p></li><li><p>And some more things, that haven&#39;t been documented yet.</p></li></ul>',3)]))}const f=s(i,[["render",l]]);export{h as __pageData,f as default};
